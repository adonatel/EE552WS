1. What are JDK, JRE and JVM? It should be in your own words and not more than two unambiguous sentences for each.

The JDK (Java Development Kit) is what allows a program to be created in a format that the JRE and JVM can execute.
As the name implies, the JDK's purpose is geared towards the development of program rather than their running. 

The JRE (Java Runtime Environment) is used for the purpose of running other software.
The JRE is what handles the setting up of classes and libraries in order for a program to be able to run correctly.
To put it broadly the JRE is like a manager for all of the smaller components along with the JVM.

The JVM (Java Virtual Machine) is what is used to run the programs that have been created by the JDK and setup by the JRE.
The JVM is a virtual machine that is setup to run java code on any operating system, even those that may not natively support it.
The JVM, being only a virtual machine, will also manage memory usage as well as optimize it to improve performance.


2. What is the relation between the three (JDK, JRE, JVM)? How is Java code executed in a Java program. 
Explain by assuming that the program was written on one platform (e.g., Windows) and executed on another (e.g., Linux). Small paragraph of 6-9 sentences.

Java Development Kit (JDK) is a software development environment used for developing java applications. The JDK contains the java runtime environment (JRE). The JRE provides
the minimum requirements to execute a java application. The Java Virtual Machine (JVM) is responsible for executing the program line by line. Java code is executed in a java program
by first being compiled. The '.java' file is passed through a complier which encodes the source code into bytecode. This process generates class files which are independednt of the machine
or OS that the code was compiled on. Since these class files are independent of the machine or OS it allows the program to be run on any system. So if the code was written on a windows machine
and then compiled, the program would still be able to run on a Linux based system. 



3. With the help of the code for Hello World program in Java (you can copy code with citation), explain when this program needs JDK (and not JRE and JVM), 
JRE (and not JVM) and JVM.

(code taken from Professor Ahmad's email example)

/**
* The HelloWorldApp class implements an application that
* simply prints "Hello World!" to standard output.
*/
class HelloWorldApp {
  
  public static void main(String[] args) {
    System.out.println("Hello World!"); // Display the string.
  }

}

The program needs JDK to be written and developed. So in this code example JDK would be used to actually write out the class and print line. After
writing out the program the JRE would provide an environment for the program to run in. The JRE would load class files and ensure access to memory 
and other system resources to run the program. Finally the JVM is required to run the bytecode or .class file that is generated. The JVM is useful so 
that this program can be run on any operating system since all machines with properly installed java will have the JVM interpreter installed. 



Non-trivial question: Normally the JRE is needed to set up the environment and any class files/memory that would be needed to run the program.
The question I have is whether or not the JRE can be removed from the process and manually set up in order to run the JVM.
By this I'm wondering, can the class files and memory can be set up by hand in order to be utilized by the JVM, or does it have to run through its own procedure?

























